name: Terraform Manual Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "삭제할 환경 (dev, main)"
        required: true
        default: "dev"

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ap-northeast-2
      S3_BUCKET: my-terraform-logs
      TF_DIR: ./${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (Assume Role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/finguard-terraform-admin
          role-session-name: GitHubTerraformDestroy

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_DIR }} init

      - name: Terraform Destroy
        id: destroy
        run: |
          terraform -chdir=${{ env.TF_DIR }} \
            destroy -auto-approve -no-color \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            | tee destroy.txt

      - name: Upload Destroy Log to S3 and Presign URL
        id: upload_destroy
        run: |
          REPO="${GITHUB_REPOSITORY##*/}"
          TS="$(date +%Y%m%d-%H%M%S)"
          ENV="${{ github.event.inputs.environment }}"
          FILE_NAME="${REPO}-destroy-${TS}-${ENV}.txt"

          aws s3api put-object \
            --bucket "${{ secrets.S3_PLAN_BUCKET }}" \
            --key "$FILE_NAME" \
            --body destroy.txt

          PRESIGNED_URL=$(aws s3 presign "s3://${{ secrets.S3_PLAN_BUCKET }}/$FILE_NAME" --expires-in 3600)

          # 출력 정리
          echo "$PRESIGNED_URL" > destroy_url.txt
          echo "url=$PRESIGNED_URL" >> $GITHUB_OUTPUT

      - name: Send Slack Message (Destroy)
        uses: slackapi/slack-github-action@v2.1.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: ":warning: *Terraform Destroy `${{ github.event.inputs.environment }}` complete*"
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: ":warning: *Terraform Destroy `${{ github.event.inputs.environment }}` 완료됨*"
              - type: actions
                elements:
                  - type: button
                    text:
                      type: plain_text
                      text: "Destroy 결과 확인"
                      emoji: true
                    url: "${{ steps.upload_destroy.outputs.url }}"
                    style: danger

      - name: Send Slack notification on failure
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: ":x: *Terraform Destroy Workflow Failed (`${{ github.ref_name }}`)*"
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: "*❌ Terraform Destroy 실패 발생*\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Workflow 실행 내역 보기>"
              - type: section
                fields:
                  - type: mrkdwn
                    text: "*Actor:*\n<https://github.com/${{ github.actor }}|${{ github.actor }}>"
                  - type: mrkdwn
                    text: "*Commit:*\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
                  - type: mrkdwn
                    text: "*Environment:*\n`${{ github.event.inputs.environment }}`"
