name: Terraform Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "배포할 환경 (dev, main)"
        required: true
        default: "dev"

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC 토큰 발급 허용
      contents: read # repository read 권한 (checkout용)
    env:
      AWS_REGION: ap-northeast-2
      S3_BUCKET: my-terraform-logs
      TF_DIR: ./${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (Assume Role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/finguard-terraform-admin
          role-session-name: GitHubTerraformSession

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_DIR }} init

      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=${{ env.TF_DIR }} plan -no-color > plan.txt

      - name: Upload Plan to S3 and Presign URL
        id: upload_plan
        run: |
          REPO=${GITHUB_REPOSITORY##*/}
          TS=$(date +%Y%m%d-%H%M%S)
          ENV=${{ github.event.inputs.environment }}
          FILE_NAME="${REPO}-plan-${TS}-${ENV}.txt"
          aws s3api put-object \
            --bucket ${{ secrets.S3_PLAN_BUCKET }} \
            --key "$FILE_NAME" \
            --body plan.txt
          URL=$(aws s3 presign s3://${{ secrets.S3_PLAN_BUCKET }}/$FILE_NAME --expires-in 3600)
          echo "$URL" > plan_url.txt

      - name: Send Slack Message (Plan)
        uses: slackapi/slack-github-action@v2.1.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: ":white_check_mark: *Terraform Plan (${{ github.event.inputs.environment }}) complete*"
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: ":white_check_mark: *Terraform Plan `${{ github.event.inputs.environment }}` complete*"
              - type: context
                elements:
                  - type: mrkdwn
                    text: "<$(cat plan_url.txt | tr -d '\n')|View full plan log>"


      - name: Terraform Apply
        id: apply
        run: |
          terraform -chdir=${{ env.TF_DIR }} apply -auto-approve -no-color > apply.txt

      - name: Upload Apply to S3 and Presign URL
        id: upload_apply
        run: |
          REPO=${GITHUB_REPOSITORY##*/}
          TS=$(date +%Y%m%d-%H%M%S)
          ENV=${{ github.event.inputs.environment }}
          FILE_NAME="${REPO}-apply-${TS}-${ENV}.txt"
          aws s3api put-object \
            --bucket ${{ secrets.S3_PLAN_BUCKET }} \
            --key "$FILE_NAME" \
            --body apply.txt
          URL=$(aws s3 presign s3://${{ secrets.S3_PLAN_BUCKET }}/$FILE_NAME --expires-in 3600)
          echo "$URL" > apply_url.txt

      - name: Send Slack Message (Apply)
        uses: slackapi/slack-github-action@v2.1.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: ":rocket: *Terraform Apply `${{ github.event.inputs.environment }}` complete*"
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: ":rocket: *Terraform Apply `${{ github.event.inputs.environment }}` 완료됨*"
              - type: actions
                elements:
                  - type: button
                    text:
                      type: plain_text
                      text: "Apply 결과 확인"
                      emoji: true
                    url: "$(cat apply_url.txt | tr -d '\n')"
                    style: primary

      - name: Send Slack notification on failure
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: ":x: *Terraform Workflow Failed (${{
              github.ref_name
            }})*"
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: "*❌ Terraform Workflow Failed on <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|this workflow>*"
              - type: section
                fields:
                  - type: mrkdwn
                    text: "*Actor:*\n<https://github.com/${{ github.actor }}|${{ github.actor }}>"
                  - type: mrkdwn
                    text: "*Commit:*\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>"
                  - type: mrkdwn
                    text: "*Environment:*\n`${{ github.event.inputs.environment }}`"